{"docstore/data": {"6679ff33-1e1a-4723-b17c-bc9c382456e6": {"__data__": {"id_": "6679ff33-1e1a-4723-b17c-bc9c382456e6", "embedding": null, "metadata": {"path": "C:\\Users\\haoch\\Desktop\\GEO-bot-prototype\\Data\\Sharing\\ODF_Update_File_(OUF))\\OUF_Resave_Feature.htm"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "16c30740-ea00-4b66-acbe-068199e3c868", "node_type": "4", "metadata": {"path": "C:\\Users\\haoch\\Desktop\\GEO-bot-prototype\\Data\\Sharing\\ODF_Update_File_(OUF))\\OUF_Resave_Feature.htm"}, "hash": "cdf154f718bbe9fc1a07cfcdbc9b064c8261a6b19ef338fc343d7487f1801fe8", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "OUF Resave Feature\n\nClick here to see this page in full context\n\nMaximize screen to view table of contents*\n\nBack Forward\n\nOUF Resave Feature\n\nWhat happens if somehow the chain of OUF file is broken (for instance, lost during sending) and cannot be re-sent? There is an OUF re-save feature that enables the parent OUF user to re-save over previously saved OUFs.\n\nExample:\n\nThe wellsite user saves 007.ouf after loading new data. This data happens to be corrupt and upon mailing, the recipient experiences difficulty loading the OUF. When the 007 is re-sent, the same problem occurs again so the well site user becomes aware of the problem. The corrupt data is stripped from the ODF, and new data is reloaded.\n\nYou select Save OUF Updates from the GEO menu and GEO saves the OUF as 008. This OUF cannot be loaded by the user in the operation base, since the last OUF loaded successfully was 006 and the OUFs must be loaded in sequence.\n\nThe wellsite user can click Resave Range of OUF Updates from the GEO menu and select the 007.ouf from the list in the Description column of the dialog box.\n\nClicking Save will create a 007_009.ouf. The 007_ portion of this filename is created because the operations user must have a 007.ouf to maintain the sequence. The _009 portion is created because the wellsite user created a 008.ouf incorrectly. This must now be by-passed since the 008.ouf required the original 007.ouf to load correctly.\n\nThe next OUF created by the wellsite user will be 010.ouf. The operations user will be able to load this 010.ouf because the last OUF loaded was the 007_009.ouf and the _009 portion of this OUF maintains the sequence.\n\nIf an OUF sequence is ever broken, for any reasons, the Resave Range of OUF Updates option from the GEO menu can be utilized to successfully re-establish the link.\n\nIf the recipient user accidentally deleted the child ODF and the constituent OUFs, the link could always be re-established as long as the parent ODF exists.\n\nIn an extreme scenario, the wellsite user, after saving 1000 OUFs could click Re-Save Range of OUF Updates and select number 001.ouf from the dialog box list. GEO would then create a 001_1001.ouf, which would include every well data amendment and addition in those 1000 OUFs. This could be e-mailed to the operations base user, loaded, and saved as a new child ODF.\n\nThe next OUF saved by the wellsite user will be 1002.ouf. The operations base user could then load this OUF without any problem.\n\n\u21b5\n\nBack Forward", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 2487, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}}, "docstore/metadata": {"6679ff33-1e1a-4723-b17c-bc9c382456e6": {"doc_hash": "1b11d5380015c1da1519d2f34b9cd7359baeb5f8b107a982e40137be68808f8a", "ref_doc_id": "16c30740-ea00-4b66-acbe-068199e3c868"}}, "docstore/ref_doc_info": {"16c30740-ea00-4b66-acbe-068199e3c868": {"node_ids": ["6679ff33-1e1a-4723-b17c-bc9c382456e6"], "metadata": {"path": "C:\\Users\\haoch\\Desktop\\GEO-bot-prototype\\Data\\Sharing\\ODF_Update_File_(OUF))\\OUF_Resave_Feature.htm"}}}}